// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.forthgreen.app.R;
import com.google.android.flexbox.FlexboxLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowCommentsRvBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox cbLike;

  @NonNull
  public final CircleImageView civUserImage;

  @NonNull
  public final CardView cvComment;

  @NonNull
  public final FlexboxLayout flexBox;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final ImageView ivCommentOptions;

  @NonNull
  public final ImageView ivMessage;

  @NonNull
  public final TextView tvComment;

  @NonNull
  public final TextView tvLikes;

  @NonNull
  public final TextView tvLoadMoreComments;

  @NonNull
  public final TextView tvReplies;

  @NonNull
  public final TextView tvUserFullName;

  @NonNull
  public final TextView tvViewMore;

  private RowCommentsRvBinding(@NonNull ConstraintLayout rootView, @NonNull CheckBox cbLike,
      @NonNull CircleImageView civUserImage, @NonNull CardView cvComment,
      @NonNull FlexboxLayout flexBox, @NonNull Guideline guidelineEnd,
      @NonNull Guideline guidelineStart, @NonNull ImageView ivCommentOptions,
      @NonNull ImageView ivMessage, @NonNull TextView tvComment, @NonNull TextView tvLikes,
      @NonNull TextView tvLoadMoreComments, @NonNull TextView tvReplies,
      @NonNull TextView tvUserFullName, @NonNull TextView tvViewMore) {
    this.rootView = rootView;
    this.cbLike = cbLike;
    this.civUserImage = civUserImage;
    this.cvComment = cvComment;
    this.flexBox = flexBox;
    this.guidelineEnd = guidelineEnd;
    this.guidelineStart = guidelineStart;
    this.ivCommentOptions = ivCommentOptions;
    this.ivMessage = ivMessage;
    this.tvComment = tvComment;
    this.tvLikes = tvLikes;
    this.tvLoadMoreComments = tvLoadMoreComments;
    this.tvReplies = tvReplies;
    this.tvUserFullName = tvUserFullName;
    this.tvViewMore = tvViewMore;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowCommentsRvBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowCommentsRvBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_comments_rv, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowCommentsRvBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cbLike;
      CheckBox cbLike = rootView.findViewById(id);
      if (cbLike == null) {
        break missingId;
      }

      id = R.id.civUserImage;
      CircleImageView civUserImage = rootView.findViewById(id);
      if (civUserImage == null) {
        break missingId;
      }

      id = R.id.cvComment;
      CardView cvComment = rootView.findViewById(id);
      if (cvComment == null) {
        break missingId;
      }

      id = R.id.flexBox;
      FlexboxLayout flexBox = rootView.findViewById(id);
      if (flexBox == null) {
        break missingId;
      }

      id = R.id.guidelineEnd;
      Guideline guidelineEnd = rootView.findViewById(id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guidelineStart;
      Guideline guidelineStart = rootView.findViewById(id);
      if (guidelineStart == null) {
        break missingId;
      }

      id = R.id.ivCommentOptions;
      ImageView ivCommentOptions = rootView.findViewById(id);
      if (ivCommentOptions == null) {
        break missingId;
      }

      id = R.id.ivMessage;
      ImageView ivMessage = rootView.findViewById(id);
      if (ivMessage == null) {
        break missingId;
      }

      id = R.id.tvComment;
      TextView tvComment = rootView.findViewById(id);
      if (tvComment == null) {
        break missingId;
      }

      id = R.id.tvLikes;
      TextView tvLikes = rootView.findViewById(id);
      if (tvLikes == null) {
        break missingId;
      }

      id = R.id.tvLoadMoreComments;
      TextView tvLoadMoreComments = rootView.findViewById(id);
      if (tvLoadMoreComments == null) {
        break missingId;
      }

      id = R.id.tvReplies;
      TextView tvReplies = rootView.findViewById(id);
      if (tvReplies == null) {
        break missingId;
      }

      id = R.id.tvUserFullName;
      TextView tvUserFullName = rootView.findViewById(id);
      if (tvUserFullName == null) {
        break missingId;
      }

      id = R.id.tvViewMore;
      TextView tvViewMore = rootView.findViewById(id);
      if (tvViewMore == null) {
        break missingId;
      }

      return new RowCommentsRvBinding((ConstraintLayout) rootView, cbLike, civUserImage, cvComment,
          flexBox, guidelineEnd, guidelineStart, ivCommentOptions, ivMessage, tvComment, tvLikes,
          tvLoadMoreComments, tvReplies, tvUserFullName, tvViewMore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
