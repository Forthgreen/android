// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.forthgreen.app.R;
import com.forthgreen.app.views.utils.SlidingConstraintLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ShimmerProductsHomeBinding implements ViewBinding {
  @NonNull
  private final SlidingConstraintLayout rootView;

  @NonNull
  public final View viewBrandName1;

  @NonNull
  public final View viewBrandName2;

  @NonNull
  public final View viewProdImg1;

  @NonNull
  public final View viewProdImg2;

  @NonNull
  public final View viewProdName1;

  @NonNull
  public final View viewProdName2;

  private ShimmerProductsHomeBinding(@NonNull SlidingConstraintLayout rootView,
      @NonNull View viewBrandName1, @NonNull View viewBrandName2, @NonNull View viewProdImg1,
      @NonNull View viewProdImg2, @NonNull View viewProdName1, @NonNull View viewProdName2) {
    this.rootView = rootView;
    this.viewBrandName1 = viewBrandName1;
    this.viewBrandName2 = viewBrandName2;
    this.viewProdImg1 = viewProdImg1;
    this.viewProdImg2 = viewProdImg2;
    this.viewProdName1 = viewProdName1;
    this.viewProdName2 = viewProdName2;
  }

  @Override
  @NonNull
  public SlidingConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ShimmerProductsHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ShimmerProductsHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.shimmer_products_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ShimmerProductsHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.viewBrandName1;
      View viewBrandName1 = rootView.findViewById(id);
      if (viewBrandName1 == null) {
        break missingId;
      }

      id = R.id.viewBrandName2;
      View viewBrandName2 = rootView.findViewById(id);
      if (viewBrandName2 == null) {
        break missingId;
      }

      id = R.id.viewProdImg1;
      View viewProdImg1 = rootView.findViewById(id);
      if (viewProdImg1 == null) {
        break missingId;
      }

      id = R.id.viewProdImg2;
      View viewProdImg2 = rootView.findViewById(id);
      if (viewProdImg2 == null) {
        break missingId;
      }

      id = R.id.viewProdName1;
      View viewProdName1 = rootView.findViewById(id);
      if (viewProdName1 == null) {
        break missingId;
      }

      id = R.id.viewProdName2;
      View viewProdName2 = rootView.findViewById(id);
      if (viewProdName2 == null) {
        break missingId;
      }

      return new ShimmerProductsHomeBinding((SlidingConstraintLayout) rootView, viewBrandName1,
          viewBrandName2, viewProdImg1, viewProdImg2, viewProdName1, viewProdName2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
