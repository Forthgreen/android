// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.forthgreen.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowRestaurantBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivCross;

  @NonNull
  public final ImageView ivRestaurantPic;

  @NonNull
  public final RatingBar rattingBar;

  @NonNull
  public final TextView tvCuisine;

  @NonNull
  public final TextView tvDistance;

  @NonNull
  public final TextView tvPriceRange;

  @NonNull
  public final TextView tvRatingCount;

  @NonNull
  public final TextView tvRestaurantName;

  private RowRestaurantBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivCross,
      @NonNull ImageView ivRestaurantPic, @NonNull RatingBar rattingBar,
      @NonNull TextView tvCuisine, @NonNull TextView tvDistance, @NonNull TextView tvPriceRange,
      @NonNull TextView tvRatingCount, @NonNull TextView tvRestaurantName) {
    this.rootView = rootView;
    this.ivCross = ivCross;
    this.ivRestaurantPic = ivRestaurantPic;
    this.rattingBar = rattingBar;
    this.tvCuisine = tvCuisine;
    this.tvDistance = tvDistance;
    this.tvPriceRange = tvPriceRange;
    this.tvRatingCount = tvRatingCount;
    this.tvRestaurantName = tvRestaurantName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowRestaurantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowRestaurantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_restaurant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowRestaurantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivCross;
      ImageView ivCross = rootView.findViewById(id);
      if (ivCross == null) {
        break missingId;
      }

      id = R.id.ivRestaurantPic;
      ImageView ivRestaurantPic = rootView.findViewById(id);
      if (ivRestaurantPic == null) {
        break missingId;
      }

      id = R.id.rattingBar;
      RatingBar rattingBar = rootView.findViewById(id);
      if (rattingBar == null) {
        break missingId;
      }

      id = R.id.tvCuisine;
      TextView tvCuisine = rootView.findViewById(id);
      if (tvCuisine == null) {
        break missingId;
      }

      id = R.id.tvDistance;
      TextView tvDistance = rootView.findViewById(id);
      if (tvDistance == null) {
        break missingId;
      }

      id = R.id.tvPriceRange;
      TextView tvPriceRange = rootView.findViewById(id);
      if (tvPriceRange == null) {
        break missingId;
      }

      id = R.id.tvRatingCount;
      TextView tvRatingCount = rootView.findViewById(id);
      if (tvRatingCount == null) {
        break missingId;
      }

      id = R.id.tvRestaurantName;
      TextView tvRestaurantName = rootView.findViewById(id);
      if (tvRestaurantName == null) {
        break missingId;
      }

      return new RowRestaurantBinding((ConstraintLayout) rootView, ivCross, ivRestaurantPic,
          rattingBar, tvCuisine, tvDistance, tvPriceRange, tvRatingCount, tvRestaurantName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
