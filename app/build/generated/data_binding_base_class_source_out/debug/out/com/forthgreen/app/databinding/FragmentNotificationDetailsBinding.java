// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.Group;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager2.widget.ViewPager2;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.forthgreen.app.R;
import com.forthgreen.app.views.utils.SlidingConstraintLayout;
import com.google.android.flexbox.FlexboxLayout;
import com.tbuonomo.viewpagerdotsindicator.SpringDotsIndicator;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNotificationDetailsBinding implements ViewBinding {
  @NonNull
  private final SlidingConstraintLayout rootView;

  @NonNull
  public final CheckBox cbCommentLike;

  @NonNull
  public final CheckBox cbLike;

  @NonNull
  public final CheckBox cbMute;

  @NonNull
  public final CheckBox cbReplyLike;

  @NonNull
  public final CircleImageView civPostUserImage;

  @NonNull
  public final CircleImageView civReplyUserImage;

  @NonNull
  public final CircleImageView civUserImageComments;

  @NonNull
  public final CardView cvComment;

  @NonNull
  public final CardView cvReply;

  @NonNull
  public final SpringDotsIndicator dotIndicator;

  @NonNull
  public final ShimmerFrameLayout flShimmer;

  @NonNull
  public final FlexboxLayout flexBox;

  @NonNull
  public final FlexboxLayout flexBoxComments;

  @NonNull
  public final Group groupComment;

  @NonNull
  public final Group groupMultiPicturesViews;

  @NonNull
  public final Group groupReply;

  @NonNull
  public final Group groupVideoPlayer;

  @NonNull
  public final Guideline guidelineCardEnd;

  @NonNull
  public final Guideline guidelineCardStart;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineEndReply;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final Guideline guidelineStartReply;

  @NonNull
  public final ImageView itemVideoPlayerThumbnail;

  @NonNull
  public final ImageView ivCommentOptions;

  @NonNull
  public final ImageView ivMessage;

  @NonNull
  public final ImageView ivMessageComments;

  @NonNull
  public final ImageView ivPostMenuOptions;

  @NonNull
  public final ImageView ivReplyOptions;

  @NonNull
  public final LinearLayout llPostDetails;

  @NonNull
  public final ProgressBar pbVideo;

  @NonNull
  public final ScrollView svDetails;

  @NonNull
  public final TextView tvComment;

  @NonNull
  public final TextView tvCommentLikes;

  @NonNull
  public final TextView tvComments;

  @NonNull
  public final TextView tvLikes;

  @NonNull
  public final TextView tvLoadMoreComments;

  @NonNull
  public final TextView tvPostDescription;

  @NonNull
  public final TextView tvReplies;

  @NonNull
  public final TextView tvReply;

  @NonNull
  public final TextView tvReplyLikes;

  @NonNull
  public final TextView tvUserFullName;

  @NonNull
  public final TextView tvUserFullNameComment;

  @NonNull
  public final TextView tvUserFullNameReply;

  @NonNull
  public final TextView tvUserName;

  @NonNull
  public final TextView tvViewMore;

  @NonNull
  public final TextView tvViewMoreComment;

  @NonNull
  public final TextView tvViewMoreReply;

  @NonNull
  public final View vViewVideoPlayer;

  @NonNull
  public final View viewBottomDivider;

  @NonNull
  public final ViewPager2 viewPager;

  @NonNull
  public final View viewPictureDivider;

  @NonNull
  public final View viewProfile;

  @NonNull
  public final VideoView vvVideoPlay;

  private FragmentNotificationDetailsBinding(@NonNull SlidingConstraintLayout rootView,
      @NonNull CheckBox cbCommentLike, @NonNull CheckBox cbLike, @NonNull CheckBox cbMute,
      @NonNull CheckBox cbReplyLike, @NonNull CircleImageView civPostUserImage,
      @NonNull CircleImageView civReplyUserImage, @NonNull CircleImageView civUserImageComments,
      @NonNull CardView cvComment, @NonNull CardView cvReply,
      @NonNull SpringDotsIndicator dotIndicator, @NonNull ShimmerFrameLayout flShimmer,
      @NonNull FlexboxLayout flexBox, @NonNull FlexboxLayout flexBoxComments,
      @NonNull Group groupComment, @NonNull Group groupMultiPicturesViews,
      @NonNull Group groupReply, @NonNull Group groupVideoPlayer,
      @NonNull Guideline guidelineCardEnd, @NonNull Guideline guidelineCardStart,
      @NonNull Guideline guidelineEnd, @NonNull Guideline guidelineEndReply,
      @NonNull Guideline guidelineStart, @NonNull Guideline guidelineStartReply,
      @NonNull ImageView itemVideoPlayerThumbnail, @NonNull ImageView ivCommentOptions,
      @NonNull ImageView ivMessage, @NonNull ImageView ivMessageComments,
      @NonNull ImageView ivPostMenuOptions, @NonNull ImageView ivReplyOptions,
      @NonNull LinearLayout llPostDetails, @NonNull ProgressBar pbVideo,
      @NonNull ScrollView svDetails, @NonNull TextView tvComment, @NonNull TextView tvCommentLikes,
      @NonNull TextView tvComments, @NonNull TextView tvLikes, @NonNull TextView tvLoadMoreComments,
      @NonNull TextView tvPostDescription, @NonNull TextView tvReplies, @NonNull TextView tvReply,
      @NonNull TextView tvReplyLikes, @NonNull TextView tvUserFullName,
      @NonNull TextView tvUserFullNameComment, @NonNull TextView tvUserFullNameReply,
      @NonNull TextView tvUserName, @NonNull TextView tvViewMore,
      @NonNull TextView tvViewMoreComment, @NonNull TextView tvViewMoreReply,
      @NonNull View vViewVideoPlayer, @NonNull View viewBottomDivider,
      @NonNull ViewPager2 viewPager, @NonNull View viewPictureDivider, @NonNull View viewProfile,
      @NonNull VideoView vvVideoPlay) {
    this.rootView = rootView;
    this.cbCommentLike = cbCommentLike;
    this.cbLike = cbLike;
    this.cbMute = cbMute;
    this.cbReplyLike = cbReplyLike;
    this.civPostUserImage = civPostUserImage;
    this.civReplyUserImage = civReplyUserImage;
    this.civUserImageComments = civUserImageComments;
    this.cvComment = cvComment;
    this.cvReply = cvReply;
    this.dotIndicator = dotIndicator;
    this.flShimmer = flShimmer;
    this.flexBox = flexBox;
    this.flexBoxComments = flexBoxComments;
    this.groupComment = groupComment;
    this.groupMultiPicturesViews = groupMultiPicturesViews;
    this.groupReply = groupReply;
    this.groupVideoPlayer = groupVideoPlayer;
    this.guidelineCardEnd = guidelineCardEnd;
    this.guidelineCardStart = guidelineCardStart;
    this.guidelineEnd = guidelineEnd;
    this.guidelineEndReply = guidelineEndReply;
    this.guidelineStart = guidelineStart;
    this.guidelineStartReply = guidelineStartReply;
    this.itemVideoPlayerThumbnail = itemVideoPlayerThumbnail;
    this.ivCommentOptions = ivCommentOptions;
    this.ivMessage = ivMessage;
    this.ivMessageComments = ivMessageComments;
    this.ivPostMenuOptions = ivPostMenuOptions;
    this.ivReplyOptions = ivReplyOptions;
    this.llPostDetails = llPostDetails;
    this.pbVideo = pbVideo;
    this.svDetails = svDetails;
    this.tvComment = tvComment;
    this.tvCommentLikes = tvCommentLikes;
    this.tvComments = tvComments;
    this.tvLikes = tvLikes;
    this.tvLoadMoreComments = tvLoadMoreComments;
    this.tvPostDescription = tvPostDescription;
    this.tvReplies = tvReplies;
    this.tvReply = tvReply;
    this.tvReplyLikes = tvReplyLikes;
    this.tvUserFullName = tvUserFullName;
    this.tvUserFullNameComment = tvUserFullNameComment;
    this.tvUserFullNameReply = tvUserFullNameReply;
    this.tvUserName = tvUserName;
    this.tvViewMore = tvViewMore;
    this.tvViewMoreComment = tvViewMoreComment;
    this.tvViewMoreReply = tvViewMoreReply;
    this.vViewVideoPlayer = vViewVideoPlayer;
    this.viewBottomDivider = viewBottomDivider;
    this.viewPager = viewPager;
    this.viewPictureDivider = viewPictureDivider;
    this.viewProfile = viewProfile;
    this.vvVideoPlay = vvVideoPlay;
  }

  @Override
  @NonNull
  public SlidingConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNotificationDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNotificationDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_notification_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNotificationDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cbCommentLike;
      CheckBox cbCommentLike = rootView.findViewById(id);
      if (cbCommentLike == null) {
        break missingId;
      }

      id = R.id.cbLike;
      CheckBox cbLike = rootView.findViewById(id);
      if (cbLike == null) {
        break missingId;
      }

      id = R.id.cbMute;
      CheckBox cbMute = rootView.findViewById(id);
      if (cbMute == null) {
        break missingId;
      }

      id = R.id.cbReplyLike;
      CheckBox cbReplyLike = rootView.findViewById(id);
      if (cbReplyLike == null) {
        break missingId;
      }

      id = R.id.civPostUserImage;
      CircleImageView civPostUserImage = rootView.findViewById(id);
      if (civPostUserImage == null) {
        break missingId;
      }

      id = R.id.civReplyUserImage;
      CircleImageView civReplyUserImage = rootView.findViewById(id);
      if (civReplyUserImage == null) {
        break missingId;
      }

      id = R.id.civUserImageComments;
      CircleImageView civUserImageComments = rootView.findViewById(id);
      if (civUserImageComments == null) {
        break missingId;
      }

      id = R.id.cvComment;
      CardView cvComment = rootView.findViewById(id);
      if (cvComment == null) {
        break missingId;
      }

      id = R.id.cvReply;
      CardView cvReply = rootView.findViewById(id);
      if (cvReply == null) {
        break missingId;
      }

      id = R.id.dotIndicator;
      SpringDotsIndicator dotIndicator = rootView.findViewById(id);
      if (dotIndicator == null) {
        break missingId;
      }

      id = R.id.flShimmer;
      ShimmerFrameLayout flShimmer = rootView.findViewById(id);
      if (flShimmer == null) {
        break missingId;
      }

      id = R.id.flexBox;
      FlexboxLayout flexBox = rootView.findViewById(id);
      if (flexBox == null) {
        break missingId;
      }

      id = R.id.flexBoxComments;
      FlexboxLayout flexBoxComments = rootView.findViewById(id);
      if (flexBoxComments == null) {
        break missingId;
      }

      id = R.id.groupComment;
      Group groupComment = rootView.findViewById(id);
      if (groupComment == null) {
        break missingId;
      }

      id = R.id.groupMultiPicturesViews;
      Group groupMultiPicturesViews = rootView.findViewById(id);
      if (groupMultiPicturesViews == null) {
        break missingId;
      }

      id = R.id.groupReply;
      Group groupReply = rootView.findViewById(id);
      if (groupReply == null) {
        break missingId;
      }

      id = R.id.groupVideoPlayer;
      Group groupVideoPlayer = rootView.findViewById(id);
      if (groupVideoPlayer == null) {
        break missingId;
      }

      id = R.id.guidelineCardEnd;
      Guideline guidelineCardEnd = rootView.findViewById(id);
      if (guidelineCardEnd == null) {
        break missingId;
      }

      id = R.id.guidelineCardStart;
      Guideline guidelineCardStart = rootView.findViewById(id);
      if (guidelineCardStart == null) {
        break missingId;
      }

      id = R.id.guidelineEnd;
      Guideline guidelineEnd = rootView.findViewById(id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guidelineEndReply;
      Guideline guidelineEndReply = rootView.findViewById(id);
      if (guidelineEndReply == null) {
        break missingId;
      }

      id = R.id.guidelineStart;
      Guideline guidelineStart = rootView.findViewById(id);
      if (guidelineStart == null) {
        break missingId;
      }

      id = R.id.guidelineStartReply;
      Guideline guidelineStartReply = rootView.findViewById(id);
      if (guidelineStartReply == null) {
        break missingId;
      }

      id = R.id.itemVideoPlayerThumbnail;
      ImageView itemVideoPlayerThumbnail = rootView.findViewById(id);
      if (itemVideoPlayerThumbnail == null) {
        break missingId;
      }

      id = R.id.ivCommentOptions;
      ImageView ivCommentOptions = rootView.findViewById(id);
      if (ivCommentOptions == null) {
        break missingId;
      }

      id = R.id.ivMessage;
      ImageView ivMessage = rootView.findViewById(id);
      if (ivMessage == null) {
        break missingId;
      }

      id = R.id.ivMessageComments;
      ImageView ivMessageComments = rootView.findViewById(id);
      if (ivMessageComments == null) {
        break missingId;
      }

      id = R.id.ivPostMenuOptions;
      ImageView ivPostMenuOptions = rootView.findViewById(id);
      if (ivPostMenuOptions == null) {
        break missingId;
      }

      id = R.id.ivReplyOptions;
      ImageView ivReplyOptions = rootView.findViewById(id);
      if (ivReplyOptions == null) {
        break missingId;
      }

      id = R.id.llPostDetails;
      LinearLayout llPostDetails = rootView.findViewById(id);
      if (llPostDetails == null) {
        break missingId;
      }

      id = R.id.pbVideo;
      ProgressBar pbVideo = rootView.findViewById(id);
      if (pbVideo == null) {
        break missingId;
      }

      id = R.id.svDetails;
      ScrollView svDetails = rootView.findViewById(id);
      if (svDetails == null) {
        break missingId;
      }

      id = R.id.tvComment;
      TextView tvComment = rootView.findViewById(id);
      if (tvComment == null) {
        break missingId;
      }

      id = R.id.tvCommentLikes;
      TextView tvCommentLikes = rootView.findViewById(id);
      if (tvCommentLikes == null) {
        break missingId;
      }

      id = R.id.tvComments;
      TextView tvComments = rootView.findViewById(id);
      if (tvComments == null) {
        break missingId;
      }

      id = R.id.tvLikes;
      TextView tvLikes = rootView.findViewById(id);
      if (tvLikes == null) {
        break missingId;
      }

      id = R.id.tvLoadMoreComments;
      TextView tvLoadMoreComments = rootView.findViewById(id);
      if (tvLoadMoreComments == null) {
        break missingId;
      }

      id = R.id.tvPostDescription;
      TextView tvPostDescription = rootView.findViewById(id);
      if (tvPostDescription == null) {
        break missingId;
      }

      id = R.id.tvReplies;
      TextView tvReplies = rootView.findViewById(id);
      if (tvReplies == null) {
        break missingId;
      }

      id = R.id.tvReply;
      TextView tvReply = rootView.findViewById(id);
      if (tvReply == null) {
        break missingId;
      }

      id = R.id.tvReplyLikes;
      TextView tvReplyLikes = rootView.findViewById(id);
      if (tvReplyLikes == null) {
        break missingId;
      }

      id = R.id.tvUserFullName;
      TextView tvUserFullName = rootView.findViewById(id);
      if (tvUserFullName == null) {
        break missingId;
      }

      id = R.id.tvUserFullNameComment;
      TextView tvUserFullNameComment = rootView.findViewById(id);
      if (tvUserFullNameComment == null) {
        break missingId;
      }

      id = R.id.tvUserFullNameReply;
      TextView tvUserFullNameReply = rootView.findViewById(id);
      if (tvUserFullNameReply == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = rootView.findViewById(id);
      if (tvUserName == null) {
        break missingId;
      }

      id = R.id.tvViewMore;
      TextView tvViewMore = rootView.findViewById(id);
      if (tvViewMore == null) {
        break missingId;
      }

      id = R.id.tvViewMoreComment;
      TextView tvViewMoreComment = rootView.findViewById(id);
      if (tvViewMoreComment == null) {
        break missingId;
      }

      id = R.id.tvViewMoreReply;
      TextView tvViewMoreReply = rootView.findViewById(id);
      if (tvViewMoreReply == null) {
        break missingId;
      }

      id = R.id.vViewVideoPlayer;
      View vViewVideoPlayer = rootView.findViewById(id);
      if (vViewVideoPlayer == null) {
        break missingId;
      }

      id = R.id.viewBottomDivider;
      View viewBottomDivider = rootView.findViewById(id);
      if (viewBottomDivider == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      id = R.id.viewPictureDivider;
      View viewPictureDivider = rootView.findViewById(id);
      if (viewPictureDivider == null) {
        break missingId;
      }

      id = R.id.viewProfile;
      View viewProfile = rootView.findViewById(id);
      if (viewProfile == null) {
        break missingId;
      }

      id = R.id.vvVideoPlay;
      VideoView vvVideoPlay = rootView.findViewById(id);
      if (vvVideoPlay == null) {
        break missingId;
      }

      return new FragmentNotificationDetailsBinding((SlidingConstraintLayout) rootView,
          cbCommentLike, cbLike, cbMute, cbReplyLike, civPostUserImage, civReplyUserImage,
          civUserImageComments, cvComment, cvReply, dotIndicator, flShimmer, flexBox,
          flexBoxComments, groupComment, groupMultiPicturesViews, groupReply, groupVideoPlayer,
          guidelineCardEnd, guidelineCardStart, guidelineEnd, guidelineEndReply, guidelineStart,
          guidelineStartReply, itemVideoPlayerThumbnail, ivCommentOptions, ivMessage,
          ivMessageComments, ivPostMenuOptions, ivReplyOptions, llPostDetails, pbVideo, svDetails,
          tvComment, tvCommentLikes, tvComments, tvLikes, tvLoadMoreComments, tvPostDescription,
          tvReplies, tvReply, tvReplyLikes, tvUserFullName, tvUserFullNameComment,
          tvUserFullNameReply, tvUserName, tvViewMore, tvViewMoreComment, tvViewMoreReply,
          vViewVideoPlayer, viewBottomDivider, viewPager, viewPictureDivider, viewProfile,
          vvVideoPlay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
