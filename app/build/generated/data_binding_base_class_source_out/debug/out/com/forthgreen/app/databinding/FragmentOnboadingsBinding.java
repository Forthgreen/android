// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager2.widget.ViewPager2;
import com.forthgreen.app.R;
import com.forthgreen.app.views.utils.SlidingConstraintLayout;
import com.tbuonomo.viewpagerdotsindicator.SpringDotsIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOnboadingsBinding implements ViewBinding {
  @NonNull
  private final SlidingConstraintLayout rootView;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final SpringDotsIndicator dotIndicator;

  @NonNull
  public final TextView tvSkipLabel;

  @NonNull
  public final ViewPager2 viewPager;

  private FragmentOnboadingsBinding(@NonNull SlidingConstraintLayout rootView,
      @NonNull Button btnNext, @NonNull SpringDotsIndicator dotIndicator,
      @NonNull TextView tvSkipLabel, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.dotIndicator = dotIndicator;
    this.tvSkipLabel = tvSkipLabel;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public SlidingConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOnboadingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOnboadingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_onboadings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOnboadingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      Button btnNext = rootView.findViewById(id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.dotIndicator;
      SpringDotsIndicator dotIndicator = rootView.findViewById(id);
      if (dotIndicator == null) {
        break missingId;
      }

      id = R.id.tvSkipLabel;
      TextView tvSkipLabel = rootView.findViewById(id);
      if (tvSkipLabel == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      return new FragmentOnboadingsBinding((SlidingConstraintLayout) rootView, btnNext,
          dotIndicator, tvSkipLabel, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
