// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.forthgreen.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeFilterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnProducts;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvClearFilter;

  @NonNull
  public final TextView tvToolbarTitle;

  private FragmentHomeFilterBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnProducts,
      @NonNull RecyclerView recyclerView, @NonNull Toolbar toolbar, @NonNull TextView tvClearFilter,
      @NonNull TextView tvToolbarTitle) {
    this.rootView = rootView;
    this.btnProducts = btnProducts;
    this.recyclerView = recyclerView;
    this.toolbar = toolbar;
    this.tvClearFilter = tvClearFilter;
    this.tvToolbarTitle = tvToolbarTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnProducts;
      Button btnProducts = rootView.findViewById(id);
      if (btnProducts == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvClearFilter;
      TextView tvClearFilter = rootView.findViewById(id);
      if (tvClearFilter == null) {
        break missingId;
      }

      id = R.id.tvToolbarTitle;
      TextView tvToolbarTitle = rootView.findViewById(id);
      if (tvToolbarTitle == null) {
        break missingId;
      }

      return new FragmentHomeFilterBinding((ConstraintLayout) rootView, btnProducts, recyclerView,
          toolbar, tvClearFilter, tvToolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
