// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.Group;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.forthgreen.app.R;
import com.forthgreen.app.views.utils.SlidingConstraintLayout;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreatePostBinding implements ViewBinding {
  @NonNull
  private final SlidingConstraintLayout rootView;

  @NonNull
  public final Button btnAddPictures;

  @NonNull
  public final Button btnPost;

  @NonNull
  public final EditText etPostText;

  @NonNull
  public final Group groupVideo;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineEndSv;

  @NonNull
  public final Guideline guidelineEndToolbar;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final Guideline guidelineStartSv;

  @NonNull
  public final ImageView ivClose;

  @NonNull
  public final ImageView ivPlay;

  @NonNull
  public final ShapeableImageView ivVideo;

  @NonNull
  public final RecyclerView recyclerViewTags;

  @NonNull
  public final RecyclerView rvPostImages;

  @NonNull
  public final ScrollView svPost;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvCreatePost;

  @NonNull
  public final View viewPost;

  private FragmentCreatePostBinding(@NonNull SlidingConstraintLayout rootView,
      @NonNull Button btnAddPictures, @NonNull Button btnPost, @NonNull EditText etPostText,
      @NonNull Group groupVideo, @NonNull Guideline guidelineEnd, @NonNull Guideline guidelineEndSv,
      @NonNull Guideline guidelineEndToolbar, @NonNull Guideline guidelineStart,
      @NonNull Guideline guidelineStartSv, @NonNull ImageView ivClose, @NonNull ImageView ivPlay,
      @NonNull ShapeableImageView ivVideo, @NonNull RecyclerView recyclerViewTags,
      @NonNull RecyclerView rvPostImages, @NonNull ScrollView svPost, @NonNull Toolbar toolbar,
      @NonNull TextView tvCreatePost, @NonNull View viewPost) {
    this.rootView = rootView;
    this.btnAddPictures = btnAddPictures;
    this.btnPost = btnPost;
    this.etPostText = etPostText;
    this.groupVideo = groupVideo;
    this.guidelineEnd = guidelineEnd;
    this.guidelineEndSv = guidelineEndSv;
    this.guidelineEndToolbar = guidelineEndToolbar;
    this.guidelineStart = guidelineStart;
    this.guidelineStartSv = guidelineStartSv;
    this.ivClose = ivClose;
    this.ivPlay = ivPlay;
    this.ivVideo = ivVideo;
    this.recyclerViewTags = recyclerViewTags;
    this.rvPostImages = rvPostImages;
    this.svPost = svPost;
    this.toolbar = toolbar;
    this.tvCreatePost = tvCreatePost;
    this.viewPost = viewPost;
  }

  @Override
  @NonNull
  public SlidingConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreatePostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreatePostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreatePostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddPictures;
      Button btnAddPictures = rootView.findViewById(id);
      if (btnAddPictures == null) {
        break missingId;
      }

      id = R.id.btnPost;
      Button btnPost = rootView.findViewById(id);
      if (btnPost == null) {
        break missingId;
      }

      id = R.id.etPostText;
      EditText etPostText = rootView.findViewById(id);
      if (etPostText == null) {
        break missingId;
      }

      id = R.id.groupVideo;
      Group groupVideo = rootView.findViewById(id);
      if (groupVideo == null) {
        break missingId;
      }

      id = R.id.guidelineEnd;
      Guideline guidelineEnd = rootView.findViewById(id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guidelineEndSv;
      Guideline guidelineEndSv = rootView.findViewById(id);
      if (guidelineEndSv == null) {
        break missingId;
      }

      id = R.id.guidelineEndToolbar;
      Guideline guidelineEndToolbar = rootView.findViewById(id);
      if (guidelineEndToolbar == null) {
        break missingId;
      }

      id = R.id.guidelineStart;
      Guideline guidelineStart = rootView.findViewById(id);
      if (guidelineStart == null) {
        break missingId;
      }

      id = R.id.guidelineStartSv;
      Guideline guidelineStartSv = rootView.findViewById(id);
      if (guidelineStartSv == null) {
        break missingId;
      }

      id = R.id.ivClose;
      ImageView ivClose = rootView.findViewById(id);
      if (ivClose == null) {
        break missingId;
      }

      id = R.id.ivPlay;
      ImageView ivPlay = rootView.findViewById(id);
      if (ivPlay == null) {
        break missingId;
      }

      id = R.id.ivVideo;
      ShapeableImageView ivVideo = rootView.findViewById(id);
      if (ivVideo == null) {
        break missingId;
      }

      id = R.id.recyclerViewTags;
      RecyclerView recyclerViewTags = rootView.findViewById(id);
      if (recyclerViewTags == null) {
        break missingId;
      }

      id = R.id.rvPostImages;
      RecyclerView rvPostImages = rootView.findViewById(id);
      if (rvPostImages == null) {
        break missingId;
      }

      id = R.id.svPost;
      ScrollView svPost = rootView.findViewById(id);
      if (svPost == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvCreatePost;
      TextView tvCreatePost = rootView.findViewById(id);
      if (tvCreatePost == null) {
        break missingId;
      }

      id = R.id.viewPost;
      View viewPost = rootView.findViewById(id);
      if (viewPost == null) {
        break missingId;
      }

      return new FragmentCreatePostBinding((SlidingConstraintLayout) rootView, btnAddPictures,
          btnPost, etPostText, groupVideo, guidelineEnd, guidelineEndSv, guidelineEndToolbar,
          guidelineStart, guidelineStartSv, ivClose, ivPlay, ivVideo, recyclerViewTags,
          rvPostImages, svPost, toolbar, tvCreatePost, viewPost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
