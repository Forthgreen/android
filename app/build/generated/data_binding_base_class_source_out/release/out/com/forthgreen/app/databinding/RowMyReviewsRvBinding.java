// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.forthgreen.app.R;
import com.forthgreen.app.views.utils.SlidingConstraintLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowMyReviewsRvBinding implements ViewBinding {
  @NonNull
  private final SlidingConstraintLayout rootView;

  @NonNull
  public final ImageView ivProductImage;

  @NonNull
  public final RatingBar rbProductRating;

  @NonNull
  public final TextView tvProductNameTop;

  @NonNull
  public final TextView tvReview;

  @NonNull
  public final TextView tvReviewTitle;

  private RowMyReviewsRvBinding(@NonNull SlidingConstraintLayout rootView,
      @NonNull ImageView ivProductImage, @NonNull RatingBar rbProductRating,
      @NonNull TextView tvProductNameTop, @NonNull TextView tvReview,
      @NonNull TextView tvReviewTitle) {
    this.rootView = rootView;
    this.ivProductImage = ivProductImage;
    this.rbProductRating = rbProductRating;
    this.tvProductNameTop = tvProductNameTop;
    this.tvReview = tvReview;
    this.tvReviewTitle = tvReviewTitle;
  }

  @Override
  @NonNull
  public SlidingConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowMyReviewsRvBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowMyReviewsRvBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_my_reviews_rv, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowMyReviewsRvBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivProductImage;
      ImageView ivProductImage = rootView.findViewById(id);
      if (ivProductImage == null) {
        break missingId;
      }

      id = R.id.rbProductRating;
      RatingBar rbProductRating = rootView.findViewById(id);
      if (rbProductRating == null) {
        break missingId;
      }

      id = R.id.tvProductNameTop;
      TextView tvProductNameTop = rootView.findViewById(id);
      if (tvProductNameTop == null) {
        break missingId;
      }

      id = R.id.tvReview;
      TextView tvReview = rootView.findViewById(id);
      if (tvReview == null) {
        break missingId;
      }

      id = R.id.tvReviewTitle;
      TextView tvReviewTitle = rootView.findViewById(id);
      if (tvReviewTitle == null) {
        break missingId;
      }

      return new RowMyReviewsRvBinding((SlidingConstraintLayout) rootView, ivProductImage,
          rbProductRating, tvProductNameTop, tvReview, tvReviewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
