// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.forthgreen.app.R;
import com.forthgreen.app.views.utils.SlidingConstraintLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileNavDrawerBinding implements ViewBinding {
  @NonNull
  private final SlidingConstraintLayout rootView;

  @NonNull
  public final CircleImageView civUserImage;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final ImageView ivClose;

  @NonNull
  public final TextView tvAboutUs;

  @NonNull
  public final TextView tvContactUs;

  @NonNull
  public final TextView tvDeleteAccount;

  @NonNull
  public final TextView tvEditProfile;

  @NonNull
  public final TextView tvLeaveFeedback;

  @NonNull
  public final TextView tvLogout;

  @NonNull
  public final TextView tvPrivacyPolicy;

  @NonNull
  public final TextView tvTermsConditions;

  @NonNull
  public final TextView tvUserFullName;

  @NonNull
  public final View viewDividerAboutUs;

  @NonNull
  public final View viewDividerCollections;

  @NonNull
  public final View viewDividerContactUs;

  @NonNull
  public final View viewDividerEditProfile;

  @NonNull
  public final View viewDividerLeaveFeedback;

  @NonNull
  public final View viewDividerPrivacy;

  @NonNull
  public final View viewDividerTerms;

  @NonNull
  public final View viewTop;

  private FragmentProfileNavDrawerBinding(@NonNull SlidingConstraintLayout rootView,
      @NonNull CircleImageView civUserImage, @NonNull Guideline guidelineEnd,
      @NonNull Guideline guidelineStart, @NonNull ImageView ivClose, @NonNull TextView tvAboutUs,
      @NonNull TextView tvContactUs, @NonNull TextView tvDeleteAccount,
      @NonNull TextView tvEditProfile, @NonNull TextView tvLeaveFeedback,
      @NonNull TextView tvLogout, @NonNull TextView tvPrivacyPolicy,
      @NonNull TextView tvTermsConditions, @NonNull TextView tvUserFullName,
      @NonNull View viewDividerAboutUs, @NonNull View viewDividerCollections,
      @NonNull View viewDividerContactUs, @NonNull View viewDividerEditProfile,
      @NonNull View viewDividerLeaveFeedback, @NonNull View viewDividerPrivacy,
      @NonNull View viewDividerTerms, @NonNull View viewTop) {
    this.rootView = rootView;
    this.civUserImage = civUserImage;
    this.guidelineEnd = guidelineEnd;
    this.guidelineStart = guidelineStart;
    this.ivClose = ivClose;
    this.tvAboutUs = tvAboutUs;
    this.tvContactUs = tvContactUs;
    this.tvDeleteAccount = tvDeleteAccount;
    this.tvEditProfile = tvEditProfile;
    this.tvLeaveFeedback = tvLeaveFeedback;
    this.tvLogout = tvLogout;
    this.tvPrivacyPolicy = tvPrivacyPolicy;
    this.tvTermsConditions = tvTermsConditions;
    this.tvUserFullName = tvUserFullName;
    this.viewDividerAboutUs = viewDividerAboutUs;
    this.viewDividerCollections = viewDividerCollections;
    this.viewDividerContactUs = viewDividerContactUs;
    this.viewDividerEditProfile = viewDividerEditProfile;
    this.viewDividerLeaveFeedback = viewDividerLeaveFeedback;
    this.viewDividerPrivacy = viewDividerPrivacy;
    this.viewDividerTerms = viewDividerTerms;
    this.viewTop = viewTop;
  }

  @Override
  @NonNull
  public SlidingConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileNavDrawerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileNavDrawerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile_nav_drawer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileNavDrawerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.civUserImage;
      CircleImageView civUserImage = rootView.findViewById(id);
      if (civUserImage == null) {
        break missingId;
      }

      id = R.id.guidelineEnd;
      Guideline guidelineEnd = rootView.findViewById(id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guidelineStart;
      Guideline guidelineStart = rootView.findViewById(id);
      if (guidelineStart == null) {
        break missingId;
      }

      id = R.id.ivClose;
      ImageView ivClose = rootView.findViewById(id);
      if (ivClose == null) {
        break missingId;
      }

      id = R.id.tvAboutUs;
      TextView tvAboutUs = rootView.findViewById(id);
      if (tvAboutUs == null) {
        break missingId;
      }

      id = R.id.tvContactUs;
      TextView tvContactUs = rootView.findViewById(id);
      if (tvContactUs == null) {
        break missingId;
      }

      id = R.id.tvDeleteAccount;
      TextView tvDeleteAccount = rootView.findViewById(id);
      if (tvDeleteAccount == null) {
        break missingId;
      }

      id = R.id.tvEditProfile;
      TextView tvEditProfile = rootView.findViewById(id);
      if (tvEditProfile == null) {
        break missingId;
      }

      id = R.id.tvLeaveFeedback;
      TextView tvLeaveFeedback = rootView.findViewById(id);
      if (tvLeaveFeedback == null) {
        break missingId;
      }

      id = R.id.tvLogout;
      TextView tvLogout = rootView.findViewById(id);
      if (tvLogout == null) {
        break missingId;
      }

      id = R.id.tvPrivacyPolicy;
      TextView tvPrivacyPolicy = rootView.findViewById(id);
      if (tvPrivacyPolicy == null) {
        break missingId;
      }

      id = R.id.tvTermsConditions;
      TextView tvTermsConditions = rootView.findViewById(id);
      if (tvTermsConditions == null) {
        break missingId;
      }

      id = R.id.tvUserFullName;
      TextView tvUserFullName = rootView.findViewById(id);
      if (tvUserFullName == null) {
        break missingId;
      }

      id = R.id.viewDividerAboutUs;
      View viewDividerAboutUs = rootView.findViewById(id);
      if (viewDividerAboutUs == null) {
        break missingId;
      }

      id = R.id.viewDividerCollections;
      View viewDividerCollections = rootView.findViewById(id);
      if (viewDividerCollections == null) {
        break missingId;
      }

      id = R.id.viewDividerContactUs;
      View viewDividerContactUs = rootView.findViewById(id);
      if (viewDividerContactUs == null) {
        break missingId;
      }

      id = R.id.viewDividerEditProfile;
      View viewDividerEditProfile = rootView.findViewById(id);
      if (viewDividerEditProfile == null) {
        break missingId;
      }

      id = R.id.viewDividerLeaveFeedback;
      View viewDividerLeaveFeedback = rootView.findViewById(id);
      if (viewDividerLeaveFeedback == null) {
        break missingId;
      }

      id = R.id.viewDividerPrivacy;
      View viewDividerPrivacy = rootView.findViewById(id);
      if (viewDividerPrivacy == null) {
        break missingId;
      }

      id = R.id.viewDividerTerms;
      View viewDividerTerms = rootView.findViewById(id);
      if (viewDividerTerms == null) {
        break missingId;
      }

      id = R.id.viewTop;
      View viewTop = rootView.findViewById(id);
      if (viewTop == null) {
        break missingId;
      }

      return new FragmentProfileNavDrawerBinding((SlidingConstraintLayout) rootView, civUserImage,
          guidelineEnd, guidelineStart, ivClose, tvAboutUs, tvContactUs, tvDeleteAccount,
          tvEditProfile, tvLeaveFeedback, tvLogout, tvPrivacyPolicy, tvTermsConditions,
          tvUserFullName, viewDividerAboutUs, viewDividerCollections, viewDividerContactUs,
          viewDividerEditProfile, viewDividerLeaveFeedback, viewDividerPrivacy, viewDividerTerms,
          viewTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
