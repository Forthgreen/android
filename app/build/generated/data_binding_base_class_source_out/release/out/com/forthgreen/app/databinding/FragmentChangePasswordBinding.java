// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.forthgreen.app.R;
import com.forthgreen.app.views.utils.SlidingConstraintLayout;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChangePasswordBinding implements ViewBinding {
  @NonNull
  private final SlidingConstraintLayout rootView;

  @NonNull
  public final Button btnChangePassword;

  @NonNull
  public final TextInputEditText etConfirmPass;

  @NonNull
  public final TextInputEditText etCurrentPass;

  @NonNull
  public final TextInputEditText etPass;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final TextInputLayout tilConfirmPass;

  @NonNull
  public final TextInputLayout tilCurrentPass;

  @NonNull
  public final TextInputLayout tilPass;

  @NonNull
  public final TextView tvConfirmPassLabel;

  @NonNull
  public final TextView tvCurrentPassLabel;

  @NonNull
  public final TextView tvPassLabel;

  @NonNull
  public final View viewBottomConfirmPass;

  @NonNull
  public final View viewBottomCurrentPass;

  @NonNull
  public final View viewBottomPass;

  private FragmentChangePasswordBinding(@NonNull SlidingConstraintLayout rootView,
      @NonNull Button btnChangePassword, @NonNull TextInputEditText etConfirmPass,
      @NonNull TextInputEditText etCurrentPass, @NonNull TextInputEditText etPass,
      @NonNull Guideline guidelineEnd, @NonNull Guideline guidelineStart,
      @NonNull TextInputLayout tilConfirmPass, @NonNull TextInputLayout tilCurrentPass,
      @NonNull TextInputLayout tilPass, @NonNull TextView tvConfirmPassLabel,
      @NonNull TextView tvCurrentPassLabel, @NonNull TextView tvPassLabel,
      @NonNull View viewBottomConfirmPass, @NonNull View viewBottomCurrentPass,
      @NonNull View viewBottomPass) {
    this.rootView = rootView;
    this.btnChangePassword = btnChangePassword;
    this.etConfirmPass = etConfirmPass;
    this.etCurrentPass = etCurrentPass;
    this.etPass = etPass;
    this.guidelineEnd = guidelineEnd;
    this.guidelineStart = guidelineStart;
    this.tilConfirmPass = tilConfirmPass;
    this.tilCurrentPass = tilCurrentPass;
    this.tilPass = tilPass;
    this.tvConfirmPassLabel = tvConfirmPassLabel;
    this.tvCurrentPassLabel = tvCurrentPassLabel;
    this.tvPassLabel = tvPassLabel;
    this.viewBottomConfirmPass = viewBottomConfirmPass;
    this.viewBottomCurrentPass = viewBottomCurrentPass;
    this.viewBottomPass = viewBottomPass;
  }

  @Override
  @NonNull
  public SlidingConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnChangePassword;
      Button btnChangePassword = rootView.findViewById(id);
      if (btnChangePassword == null) {
        break missingId;
      }

      id = R.id.etConfirmPass;
      TextInputEditText etConfirmPass = rootView.findViewById(id);
      if (etConfirmPass == null) {
        break missingId;
      }

      id = R.id.etCurrentPass;
      TextInputEditText etCurrentPass = rootView.findViewById(id);
      if (etCurrentPass == null) {
        break missingId;
      }

      id = R.id.etPass;
      TextInputEditText etPass = rootView.findViewById(id);
      if (etPass == null) {
        break missingId;
      }

      id = R.id.guidelineEnd;
      Guideline guidelineEnd = rootView.findViewById(id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guidelineStart;
      Guideline guidelineStart = rootView.findViewById(id);
      if (guidelineStart == null) {
        break missingId;
      }

      id = R.id.tilConfirmPass;
      TextInputLayout tilConfirmPass = rootView.findViewById(id);
      if (tilConfirmPass == null) {
        break missingId;
      }

      id = R.id.tilCurrentPass;
      TextInputLayout tilCurrentPass = rootView.findViewById(id);
      if (tilCurrentPass == null) {
        break missingId;
      }

      id = R.id.tilPass;
      TextInputLayout tilPass = rootView.findViewById(id);
      if (tilPass == null) {
        break missingId;
      }

      id = R.id.tvConfirmPassLabel;
      TextView tvConfirmPassLabel = rootView.findViewById(id);
      if (tvConfirmPassLabel == null) {
        break missingId;
      }

      id = R.id.tvCurrentPassLabel;
      TextView tvCurrentPassLabel = rootView.findViewById(id);
      if (tvCurrentPassLabel == null) {
        break missingId;
      }

      id = R.id.tvPassLabel;
      TextView tvPassLabel = rootView.findViewById(id);
      if (tvPassLabel == null) {
        break missingId;
      }

      id = R.id.viewBottomConfirmPass;
      View viewBottomConfirmPass = rootView.findViewById(id);
      if (viewBottomConfirmPass == null) {
        break missingId;
      }

      id = R.id.viewBottomCurrentPass;
      View viewBottomCurrentPass = rootView.findViewById(id);
      if (viewBottomCurrentPass == null) {
        break missingId;
      }

      id = R.id.viewBottomPass;
      View viewBottomPass = rootView.findViewById(id);
      if (viewBottomPass == null) {
        break missingId;
      }

      return new FragmentChangePasswordBinding((SlidingConstraintLayout) rootView,
          btnChangePassword, etConfirmPass, etCurrentPass, etPass, guidelineEnd, guidelineStart,
          tilConfirmPass, tilCurrentPass, tilPass, tvConfirmPassLabel, tvCurrentPassLabel,
          tvPassLabel, viewBottomConfirmPass, viewBottomCurrentPass, viewBottomPass);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
