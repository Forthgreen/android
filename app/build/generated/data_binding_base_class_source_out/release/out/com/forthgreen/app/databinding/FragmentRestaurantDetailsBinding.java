// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Group;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager2.widget.ViewPager2;
import com.forthgreen.app.R;
import com.forthgreen.app.views.utils.SlidingConstraintLayout;
import com.tbuonomo.viewpagerdotsindicator.SpringDotsIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRestaurantDetailsBinding implements ViewBinding {
  @NonNull
  private final SlidingConstraintLayout rootView;

  @NonNull
  public final Button btnWebsite;

  @NonNull
  public final CheckBox cbBookmark;

  @NonNull
  public final SpringDotsIndicator dotIndicator;

  @NonNull
  public final Group groupPhoneNumber;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final ImageView ivMapView;

  @NonNull
  public final ImageView ivRestaurantImage;

  @NonNull
  public final RatingBar rattingBar;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView tvAddress;

  @NonNull
  public final TextView tvAddressDesc;

  @NonNull
  public final TextView tvCuisine;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvDistance;

  @NonNull
  public final TextView tvOpenNow;

  @NonNull
  public final TextView tvPhoneNo;

  @NonNull
  public final TextView tvPriceRange;

  @NonNull
  public final TextView tvRatingCount;

  @NonNull
  public final TextView tvRestaurantName;

  @NonNull
  public final TextView tvWriteReview;

  @NonNull
  public final View viewDividerAddress;

  @NonNull
  public final View viewDividerAddressDesc;

  @NonNull
  public final View viewDividerMapView;

  @NonNull
  public final View viewDividerPhn;

  @NonNull
  public final View viewDividerWriteReview;

  @NonNull
  public final ViewPager2 viewPager;

  private FragmentRestaurantDetailsBinding(@NonNull SlidingConstraintLayout rootView,
      @NonNull Button btnWebsite, @NonNull CheckBox cbBookmark,
      @NonNull SpringDotsIndicator dotIndicator, @NonNull Group groupPhoneNumber,
      @NonNull Guideline guidelineEnd, @NonNull Guideline guidelineStart,
      @NonNull ImageView ivMapView, @NonNull ImageView ivRestaurantImage,
      @NonNull RatingBar rattingBar, @NonNull RecyclerView recyclerView,
      @NonNull TextView tvAddress, @NonNull TextView tvAddressDesc, @NonNull TextView tvCuisine,
      @NonNull TextView tvDescription, @NonNull TextView tvDistance, @NonNull TextView tvOpenNow,
      @NonNull TextView tvPhoneNo, @NonNull TextView tvPriceRange, @NonNull TextView tvRatingCount,
      @NonNull TextView tvRestaurantName, @NonNull TextView tvWriteReview,
      @NonNull View viewDividerAddress, @NonNull View viewDividerAddressDesc,
      @NonNull View viewDividerMapView, @NonNull View viewDividerPhn,
      @NonNull View viewDividerWriteReview, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.btnWebsite = btnWebsite;
    this.cbBookmark = cbBookmark;
    this.dotIndicator = dotIndicator;
    this.groupPhoneNumber = groupPhoneNumber;
    this.guidelineEnd = guidelineEnd;
    this.guidelineStart = guidelineStart;
    this.ivMapView = ivMapView;
    this.ivRestaurantImage = ivRestaurantImage;
    this.rattingBar = rattingBar;
    this.recyclerView = recyclerView;
    this.tvAddress = tvAddress;
    this.tvAddressDesc = tvAddressDesc;
    this.tvCuisine = tvCuisine;
    this.tvDescription = tvDescription;
    this.tvDistance = tvDistance;
    this.tvOpenNow = tvOpenNow;
    this.tvPhoneNo = tvPhoneNo;
    this.tvPriceRange = tvPriceRange;
    this.tvRatingCount = tvRatingCount;
    this.tvRestaurantName = tvRestaurantName;
    this.tvWriteReview = tvWriteReview;
    this.viewDividerAddress = viewDividerAddress;
    this.viewDividerAddressDesc = viewDividerAddressDesc;
    this.viewDividerMapView = viewDividerMapView;
    this.viewDividerPhn = viewDividerPhn;
    this.viewDividerWriteReview = viewDividerWriteReview;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public SlidingConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRestaurantDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRestaurantDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_restaurant_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRestaurantDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnWebsite;
      Button btnWebsite = rootView.findViewById(id);
      if (btnWebsite == null) {
        break missingId;
      }

      id = R.id.cbBookmark;
      CheckBox cbBookmark = rootView.findViewById(id);
      if (cbBookmark == null) {
        break missingId;
      }

      id = R.id.dotIndicator;
      SpringDotsIndicator dotIndicator = rootView.findViewById(id);
      if (dotIndicator == null) {
        break missingId;
      }

      id = R.id.groupPhoneNumber;
      Group groupPhoneNumber = rootView.findViewById(id);
      if (groupPhoneNumber == null) {
        break missingId;
      }

      id = R.id.guidelineEnd;
      Guideline guidelineEnd = rootView.findViewById(id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guidelineStart;
      Guideline guidelineStart = rootView.findViewById(id);
      if (guidelineStart == null) {
        break missingId;
      }

      id = R.id.ivMapView;
      ImageView ivMapView = rootView.findViewById(id);
      if (ivMapView == null) {
        break missingId;
      }

      id = R.id.ivRestaurantImage;
      ImageView ivRestaurantImage = rootView.findViewById(id);
      if (ivRestaurantImage == null) {
        break missingId;
      }

      id = R.id.rattingBar;
      RatingBar rattingBar = rootView.findViewById(id);
      if (rattingBar == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.tvAddress;
      TextView tvAddress = rootView.findViewById(id);
      if (tvAddress == null) {
        break missingId;
      }

      id = R.id.tvAddressDesc;
      TextView tvAddressDesc = rootView.findViewById(id);
      if (tvAddressDesc == null) {
        break missingId;
      }

      id = R.id.tvCuisine;
      TextView tvCuisine = rootView.findViewById(id);
      if (tvCuisine == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = rootView.findViewById(id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvDistance;
      TextView tvDistance = rootView.findViewById(id);
      if (tvDistance == null) {
        break missingId;
      }

      id = R.id.tvOpenNow;
      TextView tvOpenNow = rootView.findViewById(id);
      if (tvOpenNow == null) {
        break missingId;
      }

      id = R.id.tvPhoneNo;
      TextView tvPhoneNo = rootView.findViewById(id);
      if (tvPhoneNo == null) {
        break missingId;
      }

      id = R.id.tvPriceRange;
      TextView tvPriceRange = rootView.findViewById(id);
      if (tvPriceRange == null) {
        break missingId;
      }

      id = R.id.tvRatingCount;
      TextView tvRatingCount = rootView.findViewById(id);
      if (tvRatingCount == null) {
        break missingId;
      }

      id = R.id.tvRestaurantName;
      TextView tvRestaurantName = rootView.findViewById(id);
      if (tvRestaurantName == null) {
        break missingId;
      }

      id = R.id.tvWriteReview;
      TextView tvWriteReview = rootView.findViewById(id);
      if (tvWriteReview == null) {
        break missingId;
      }

      id = R.id.viewDividerAddress;
      View viewDividerAddress = rootView.findViewById(id);
      if (viewDividerAddress == null) {
        break missingId;
      }

      id = R.id.viewDividerAddressDesc;
      View viewDividerAddressDesc = rootView.findViewById(id);
      if (viewDividerAddressDesc == null) {
        break missingId;
      }

      id = R.id.viewDividerMapView;
      View viewDividerMapView = rootView.findViewById(id);
      if (viewDividerMapView == null) {
        break missingId;
      }

      id = R.id.viewDividerPhn;
      View viewDividerPhn = rootView.findViewById(id);
      if (viewDividerPhn == null) {
        break missingId;
      }

      id = R.id.viewDividerWriteReview;
      View viewDividerWriteReview = rootView.findViewById(id);
      if (viewDividerWriteReview == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager2 viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      return new FragmentRestaurantDetailsBinding((SlidingConstraintLayout) rootView, btnWebsite,
          cbBookmark, dotIndicator, groupPhoneNumber, guidelineEnd, guidelineStart, ivMapView,
          ivRestaurantImage, rattingBar, recyclerView, tvAddress, tvAddressDesc, tvCuisine,
          tvDescription, tvDistance, tvOpenNow, tvPhoneNo, tvPriceRange, tvRatingCount,
          tvRestaurantName, tvWriteReview, viewDividerAddress, viewDividerAddressDesc,
          viewDividerMapView, viewDividerPhn, viewDividerWriteReview, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
