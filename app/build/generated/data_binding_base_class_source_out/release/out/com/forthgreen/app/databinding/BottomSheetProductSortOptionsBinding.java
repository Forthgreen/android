// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.forthgreen.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetProductSortOptionsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guidelineEnd;

  @NonNull
  public final Guideline guidelineStart;

  @NonNull
  public final RadioButton rbNewestFirst;

  @NonNull
  public final RadioButton rbPriceHToL;

  @NonNull
  public final RadioButton rbPriceLToH;

  @NonNull
  public final RadioGroup rgSortOptions;

  @NonNull
  public final TextView tvSortByLabel;

  @NonNull
  public final View viewDividerNewestOption;

  @NonNull
  public final View viewDividerOptions;

  @NonNull
  public final View viewDividerPriceHToL;

  @NonNull
  public final View viewDividerPriceLToH;

  private BottomSheetProductSortOptionsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guidelineEnd, @NonNull Guideline guidelineStart,
      @NonNull RadioButton rbNewestFirst, @NonNull RadioButton rbPriceHToL,
      @NonNull RadioButton rbPriceLToH, @NonNull RadioGroup rgSortOptions,
      @NonNull TextView tvSortByLabel, @NonNull View viewDividerNewestOption,
      @NonNull View viewDividerOptions, @NonNull View viewDividerPriceHToL,
      @NonNull View viewDividerPriceLToH) {
    this.rootView = rootView;
    this.guidelineEnd = guidelineEnd;
    this.guidelineStart = guidelineStart;
    this.rbNewestFirst = rbNewestFirst;
    this.rbPriceHToL = rbPriceHToL;
    this.rbPriceLToH = rbPriceLToH;
    this.rgSortOptions = rgSortOptions;
    this.tvSortByLabel = tvSortByLabel;
    this.viewDividerNewestOption = viewDividerNewestOption;
    this.viewDividerOptions = viewDividerOptions;
    this.viewDividerPriceHToL = viewDividerPriceHToL;
    this.viewDividerPriceLToH = viewDividerPriceLToH;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetProductSortOptionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetProductSortOptionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_product_sort_options, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetProductSortOptionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guidelineEnd;
      Guideline guidelineEnd = rootView.findViewById(id);
      if (guidelineEnd == null) {
        break missingId;
      }

      id = R.id.guidelineStart;
      Guideline guidelineStart = rootView.findViewById(id);
      if (guidelineStart == null) {
        break missingId;
      }

      id = R.id.rbNewestFirst;
      RadioButton rbNewestFirst = rootView.findViewById(id);
      if (rbNewestFirst == null) {
        break missingId;
      }

      id = R.id.rbPriceHToL;
      RadioButton rbPriceHToL = rootView.findViewById(id);
      if (rbPriceHToL == null) {
        break missingId;
      }

      id = R.id.rbPriceLToH;
      RadioButton rbPriceLToH = rootView.findViewById(id);
      if (rbPriceLToH == null) {
        break missingId;
      }

      id = R.id.rgSortOptions;
      RadioGroup rgSortOptions = rootView.findViewById(id);
      if (rgSortOptions == null) {
        break missingId;
      }

      id = R.id.tvSortByLabel;
      TextView tvSortByLabel = rootView.findViewById(id);
      if (tvSortByLabel == null) {
        break missingId;
      }

      id = R.id.viewDividerNewestOption;
      View viewDividerNewestOption = rootView.findViewById(id);
      if (viewDividerNewestOption == null) {
        break missingId;
      }

      id = R.id.viewDividerOptions;
      View viewDividerOptions = rootView.findViewById(id);
      if (viewDividerOptions == null) {
        break missingId;
      }

      id = R.id.viewDividerPriceHToL;
      View viewDividerPriceHToL = rootView.findViewById(id);
      if (viewDividerPriceHToL == null) {
        break missingId;
      }

      id = R.id.viewDividerPriceLToH;
      View viewDividerPriceLToH = rootView.findViewById(id);
      if (viewDividerPriceLToH == null) {
        break missingId;
      }

      return new BottomSheetProductSortOptionsBinding((ConstraintLayout) rootView, guidelineEnd,
          guidelineStart, rbNewestFirst, rbPriceHToL, rbPriceLToH, rgSortOptions, tvSortByLabel,
          viewDividerNewestOption, viewDividerOptions, viewDividerPriceHToL, viewDividerPriceLToH);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
