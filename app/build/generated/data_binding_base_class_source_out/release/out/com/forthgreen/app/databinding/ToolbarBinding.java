// Generated by view binder compiler. Do not edit!
package com.forthgreen.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import com.forthgreen.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolbarBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final ImageView ivToolbarActionEnd;

  @NonNull
  public final LinearLayout llToolbarLeftText;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvLeftToolbarTitle;

  @NonNull
  public final TextView tvToolbarActionEnd;

  @NonNull
  public final TextView tvToolbarHashtag;

  @NonNull
  public final TextView tvToolbarTitle;

  private ToolbarBinding(@NonNull View rootView, @NonNull ImageView ivToolbarActionEnd,
      @NonNull LinearLayout llToolbarLeftText, @NonNull Toolbar toolbar,
      @NonNull TextView tvLeftToolbarTitle, @NonNull TextView tvToolbarActionEnd,
      @NonNull TextView tvToolbarHashtag, @NonNull TextView tvToolbarTitle) {
    this.rootView = rootView;
    this.ivToolbarActionEnd = ivToolbarActionEnd;
    this.llToolbarLeftText = llToolbarLeftText;
    this.toolbar = toolbar;
    this.tvLeftToolbarTitle = tvLeftToolbarTitle;
    this.tvToolbarActionEnd = tvToolbarActionEnd;
    this.tvToolbarHashtag = tvToolbarHashtag;
    this.tvToolbarTitle = tvToolbarTitle;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.toolbar, parent);
    return bind(parent);
  }

  @NonNull
  public static ToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivToolbarActionEnd;
      ImageView ivToolbarActionEnd = rootView.findViewById(id);
      if (ivToolbarActionEnd == null) {
        break missingId;
      }

      id = R.id.llToolbarLeftText;
      LinearLayout llToolbarLeftText = rootView.findViewById(id);
      if (llToolbarLeftText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvLeftToolbarTitle;
      TextView tvLeftToolbarTitle = rootView.findViewById(id);
      if (tvLeftToolbarTitle == null) {
        break missingId;
      }

      id = R.id.tvToolbarActionEnd;
      TextView tvToolbarActionEnd = rootView.findViewById(id);
      if (tvToolbarActionEnd == null) {
        break missingId;
      }

      id = R.id.tvToolbarHashtag;
      TextView tvToolbarHashtag = rootView.findViewById(id);
      if (tvToolbarHashtag == null) {
        break missingId;
      }

      id = R.id.tvToolbarTitle;
      TextView tvToolbarTitle = rootView.findViewById(id);
      if (tvToolbarTitle == null) {
        break missingId;
      }

      return new ToolbarBinding(rootView, ivToolbarActionEnd, llToolbarLeftText, toolbar,
          tvLeftToolbarTitle, tvToolbarActionEnd, tvToolbarHashtag, tvToolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
